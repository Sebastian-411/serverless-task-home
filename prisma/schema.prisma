// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  phoneNumber String   @db.VarChar(20)
  addressId   String?  @unique
  role        UserRole @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  address Address? @relation(fields: [addressId], references: [id], onDelete: SetNull)

  // Optimized indexes for ALL possible queries
  @@index([email]) // Login lookups
  @@index([role]) // Authorization checks
  @@index([createdAt]) // Temporal ordering
  @@index([updatedAt]) // Recent changes tracking
  @@index([name]) // Name-based searches
  @@index([phoneNumber]) // Contact lookups
  
  // Composite indexes for complex queries
  @@index([role, createdAt]) // Admin queries with sorting
  @@index([role, updatedAt]) // Recently modified users by role
  @@index([email, role]) // Fast auth + role lookup
  @@index([createdAt, role]) // Alternative temporal + role queries
  @@index([role, name]) // Role-based name searches
  @@index([addressId, role]) // Geographic + role queries
  
  // Performance indexes for analytics
  @@index([createdAt, updatedAt]) // User activity tracking
  @@index([role, createdAt, updatedAt]) // Comprehensive role analytics
  @@map("users")
}

model Address {
  id              String   @id @default(uuid())
  addressLine1    String   @db.VarChar(500)
  addressLine2    String?  @db.VarChar(500)
  city            String   @db.VarChar(100)
  stateOrProvince String   @db.VarChar(100)
  postalCode      String   @db.VarChar(20)
  country         String   @db.VarChar(100)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  user User?

  // Geographic search indexes (all combinations)
  @@index([country]) // Country-level queries
  @@index([postalCode]) // Postal code lookups
  @@index([city]) // City searches
  @@index([stateOrProvince]) // State/province queries
  @@index([addressLine1]) // Street address searches
  
  // Hierarchical geographic indexes
  @@index([country, stateOrProvince]) // Country + state queries
  @@index([country, city]) // Country + city queries
  @@index([city, stateOrProvince]) // City + state queries
  @@index([country, stateOrProvince, city]) // Full geographic hierarchy
  @@index([stateOrProvince, city, postalCode]) // Regional precision queries
  
  // Temporal indexes for address changes
  @@index([createdAt]) // Address creation tracking
  @@index([updatedAt]) // Address modification tracking
  @@index([country, createdAt]) // Geographic + temporal analytics
  
  // Combined geographic and temporal
  @@index([country, stateOrProvince, createdAt]) // Regional growth analysis
  @@map("addresses")
}

enum UserRole {
  ADMIN
  USER
}
